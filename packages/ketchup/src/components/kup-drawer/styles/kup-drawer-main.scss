/**
* @prop --kup-drawer_backdrop: Backdrop of the component when in slide mode.
* @prop --kup-drawer_box-shadow: Box shadow of the component when in slide mode.
* @prop --kup-drawer_slide-transition: Horizontal transition's duration when in slide mode.
* @prop --kup-drawer_transition: Transitions duration.
*/

:host {
  --kup-drawer_backdrop: rgba(0, 0, 0, 0.32);
  --kup-drawer_box-shadow: 0 8px 10px -5px rgba(0, 0, 0, 0.2),
    0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12);
  --kup-drawer_slide-transition: 750ms;
  --kup-drawer_transition: 250ms;

  box-shadow: var(--kup-drawer_box-shadow);
  display: block;
  font-size: var(--kup-font-size);
  height: 100vh;
  left: calc(var(--kup-drawer-width) * -1);
  position: fixed;
  top: 0;
  transition: left var(--kup-drawer_slide-transition)
      cubic-bezier(0.4, 0, 0.2, 1),
    rightvar(--kup-drawer_slide-transition) cubic-bezier(0.4, 0, 0.2, 1);
  width: var(--kup-drawer-width);
  z-index: var(--kup-drawer-zindex);
}

#kup-component {
  height: 100%;
  width: 100%;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--kup-drawer_backdrop);
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--kup-drawer_transition) ease-in;
  z-index: var(--kup-drawer-zindex);
}

.drawer {
  height: 100%;
  position: fixed;
  width: var(--kup-drawer-width);
  z-index: calc(var(--kup-drawer-zindex) + 1);

  &__header {
    padding: 1em;
    background-color: var(--kup-primary-color);
    position: relative;
  }

  &__subtitle {
    color: var(--kup-text-on-primary-color);
    font-size: 0.75em;
    margin: 0;
  }

  &__title {
    color: var(--kup-text-on-primary-color);
    font-size: 1.5em;
    margin: 0;
  }

  &__content {
    background-color: var(--kup-drawer-background-color);
    box-sizing: border-box;
    height: 100%;
    overflow-y: auto;
    width: 100%;
  }
}

:host([kup-opened]) {
  left: 0;

  .backdrop {
    opacity: 1;
    pointer-events: all;
  }
}
