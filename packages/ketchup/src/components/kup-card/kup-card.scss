@import '@material/ripple/mdc-ripple';
@import 'collapsible/kup-card-collapsible';
@import 'dialog/kup-card-dialog';
@import 'scalable/kup-card-scalable';
@import 'standard/kup-card-standard';

/**
* @prop --kup-card_dynamic-color-N: Sets dynamically computed colors based on contrast (N occurrencies, variable automatically set by the component).
* @prop --kup-card_height: Sets height of the card (variable automatically set by the component).
* @prop --kup-card_multiplier: Sets the multiplier of scalable cards (variable automatically set by the component).
* @prop --kup-card_ripple-color: Sets color of ripple effect (for Material layouts).
* @prop --kup-card_width: Sets height of the card (variable automatically set by the component).
*/

:host {
  --kup-card_ripple-color: var(--kup-primary-color);

  display: block;
  font-size: var(--kup-font-size);
  height: var(--kup-card_height);
  min-height: var(--kup-card_height);
  min-width: var(--kup-card_width);
  outline: none;
  position: relative;
  width: var(--kup-card_width);
}

:host([is-menu]) {
  #kup-component {
    animation: fadeInFromNone 0.25s ease-out;
    display: none;
  }
}

:host([menu-visible]) {
  #kup-component {
    display: block;
  }
}

#kup-component {
  height: 100%;
  width: 100%;
}

.mdc-ripple-surface {
  cursor: pointer;
  flex-direction: column;
  display: flex;
  height: 100%;
  position: relative;

  &:before,
  &:after {
    background-color: var(--kup-card_ripple-color);
  }
}

.card-view {
  animation: fadeInFromNone 0.25s ease-out;
  display: none;
  &.visible {
    display: block;
  }
}
