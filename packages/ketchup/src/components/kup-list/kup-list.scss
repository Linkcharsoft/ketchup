/**
* @prop --kup-list_background: Sets background of the list.
* @prop --kup-list_color: Sets text color of the list.
* @prop --kup-list_font-family: Sets font family of the component.
* @prop --kup-list_font-size: Sets font size of the component.
* @prop --kup-list_font-weight: Sets font weight of the component.
* @prop --kup-list_group-item-height: Sets height of each list item when the list contains radio buttons or checkboxes.
* @prop --kup-list_item-height: Sets height of each list item.
* @prop --kup-list_item-padding: Sets padding of each list item.
* @prop --kup-list_primary-color: Sets the primary color of the component.
* @prop --kup-list_primary-color-rgb: Sets the RGB values of the primary color of the component (used for shaders).
* @prop --kup-list_separator-color: Sets the color of separators.
* @prop --kup-list_transition: Transitions duration for text and background colors.
*/

:host {
  --kup-list_background: var(--kup-background-color);
  --kup-list_color: var(--kup-text-color);
  --kup-list_font-family: var(--kup-font-family);
  --kup-list_font-size: var(--kup-font-size);
  --kup-list_font-weight: 400;
  --kup-list_group-item-height: 3em;
  --kup-list_item-height: 2.5em;
  --kup-list_item-padding: 0 0.75em;
  --kup-list_primary-color: var(--kup-primary-color);
  --kup-list_primary-color-rgb: var(--kup-primary-color-rgb);
  --kup-list_separator-color: rgba(var(--kup-text-color-rgb), 0.25);
  --kup-list_transition: 120ms;

  display: block;
  font-family: var(--kup-list_font-family);
  font-size: var(--kup-list_font-size);
  outline: none;
}

.list {
  background: var(--kup-list_background);
  color: var(--kup-list_color);
  font-weight: var(--kup-list_font-weight);
  letter-spacing: 0.009375em;
  line-height: 1.5em;
  list-style-type: none;
  margin: 0;
  padding: 0.5em 0;
  text-decoration: inherit;
  text-transform: inherit;

  .list-item {
    display: -ms-flexbox;
    display: flex;
    height: var(--kup-list_item-height);
    position: relative;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: start;
    justify-content: flex-start;
    padding: var(--kup-list_item-padding);
    overflow: hidden;
    outline: none;
    transition: background-color var(--kup-list_transition),
      color var(--kup-list_transition);

    &[role='checkbox'],
    &[role='radio'] {
      height: var(--kup-list_group-item-height);
    }

    &.list-item--activated,
    &.list-item--activated .list-item__graphic,
    &.list-item--selected,
    &.list-item--selected .list-item__graphic {
      background-color: rgba(var(--kup-list_primary-color-rgb), 0.175);
      color: var(--kup-list_primary-color);
    }

    .list-item__text {
      -o-text-overflow: ellipsis;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }

    .list-item__primary-text {
      -o-text-overflow: ellipsis;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      margin-top: 0;
      line-height: normal;
      margin-bottom: -1.5em;
      display: block;

      &:before {
        display: inline-block;
        width: 0;
        height: 1.5em;
        content: '';
        vertical-align: 0;
      }

      &:after {
        display: inline-block;
        width: 0;
        height: 2em;
        content: '';
        vertical-align: -2em;
      }
    }

    .list-item__secondary-text {
      -moz-osx-font-smoothing: grayscale;
      -o-text-overflow: ellipsis;
      -webkit-font-smoothing: antialiased;
      display: block;
      font-size: 0.875em;
      font-weight: 400;
      letter-spacing: 0.0178571429em;
      line-height: 1.25em;
      text-decoration: inherit;
      text-transform: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      margin-top: 0;
      line-height: normal;
      color: var(--kup-list_color);
      opacity: 0.75;
    }

    .icon-container {
      margin: 0;
      margin-right: 0.75em;
    }

    kup-checkbox {
      margin: 0;
    }
  }

  .list-divider {
    background-color: var(--kup-list_separator-color);
    height: 1px;
    padding: 0;
    background-clip: content-box;
  }

  &.list--two-line {
    .list-item {
      height: 3.6em;
    }

    .list-item__text {
      -ms-flex-item-align: start;
      align-self: flex-start;
    }
  }

  &:not(.list--non-interactive) {
    > :not(.list-item--disabled).list-item {
      cursor: pointer;

      label {
        cursor: pointer;
      }
    }

    .list-item {
      &:not(.list-item--selected) {
        &:hover,
        &.list-item--focused {
          background-color: var(--kup-hover-background-color);
          color: var(--kup-hover-color);
        }
      }
    }
  }

  &.text-hidden {
    .list-item__text {
      display: none;
    }
  }
}
